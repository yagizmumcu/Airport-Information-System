/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Aircrafts.Cargo;
import Aircrafts.Passenger;
import Aircrafts.PassengerPlane;
import SystemAndMain.AirportSys;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author User
 */
public class LandFrame extends javax.swing.JFrame {

    String airportLF;
    AirportScreen as2;

    public void setAirport(String airport) {

        this.airportLF = airport;

    }

    public LandFrame(AirportScreen as) {
        initComponents();
        setTitle("Landing a frame");
        setLocationRelativeTo(null);
        lbl_Contains.setVisible(false);
        lbl_cargoID.setVisible(false);
        lbl_sentDate.setVisible(false);
        txt_cargoID.setVisible(false);
        txt_contains.setVisible(false);
        txt_sentDate.setVisible(false);
        as2 = as;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rd_passanger = new javax.swing.JRadioButton();
        rd_private = new javax.swing.JRadioButton();
        rd_cargo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbl_year = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_flex1 = new javax.swing.JLabel();
        txt_model = new javax.swing.JTextField();
        txt_from = new javax.swing.JTextField();
        txt_toWhere = new javax.swing.JTextField();
        txt_pilotName = new javax.swing.JTextField();
        txt_year = new javax.swing.JTextField();
        txt_distance = new javax.swing.JTextField();
        txt_flex = new javax.swing.JTextField();
        lbl_flex2 = new javax.swing.JLabel();
        txt_flex2 = new javax.swing.JTextField();
        btn_close = new javax.swing.JButton();
        btn_land = new javax.swing.JButton();
        lbl_cargoID = new javax.swing.JLabel();
        lbl_Contains = new javax.swing.JLabel();
        lbl_sentDate = new javax.swing.JLabel();
        txt_cargoID = new javax.swing.JTextField();
        txt_contains = new javax.swing.JTextField();
        txt_sentDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_coPilotName = new javax.swing.JTextField();
        lbl_result = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(rd_passanger);
        rd_passanger.setSelected(true);
        rd_passanger.setText("Passenger");
        rd_passanger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd_passangerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rd_private);
        rd_private.setText("Private");
        rd_private.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd_privateActionPerformed(evt);
            }
        });

        buttonGroup1.add(rd_cargo);
        rd_cargo.setText("Cargo");
        rd_cargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd_cargoActionPerformed(evt);
            }
        });

        jLabel1.setText("Plane Model:");

        jLabel2.setText("From:");

        jLabel3.setText("to Where:");

        jLabel4.setText("Pilot Name:");

        lbl_year.setText("Plane Model Year:");

        jLabel6.setText("Plane's Flight Distance:");

        lbl_flex1.setText("Company Name:");

        lbl_flex2.setText("Number Of Cabin Attendant:");

        txt_flex2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_flex2KeyPressed(evt);
            }
        });

        btn_close.setText("Close");
        btn_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_closeActionPerformed(evt);
            }
        });

        btn_land.setText("Land the Plane");
        btn_land.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_landActionPerformed(evt);
            }
        });

        lbl_cargoID.setText("Cargo ID:");

        lbl_Contains.setText("Contains: ");

        lbl_sentDate.setText("Sent Date:");

        jLabel7.setText("Co-Pilot Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_flex1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbl_year)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_flex, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pilotName)
                                        .addComponent(txt_model)
                                        .addComponent(txt_from)
                                        .addComponent(txt_toWhere)
                                        .addComponent(txt_coPilotName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_distance, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(txt_flex2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rd_private)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rd_passanger)
                                .addGap(56, 56, 56)
                                .addComponent(rd_cargo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_flex2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_cargoID)
                                            .addComponent(lbl_Contains)
                                            .addComponent(lbl_sentDate))
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_cargoID)
                                            .addComponent(txt_contains)
                                            .addComponent(txt_sentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(lbl_result, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                        .addGap(75, 75, 75)
                        .addComponent(btn_land)
                        .addGap(37, 37, 37)))
                .addComponent(btn_close)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rd_private)
                    .addComponent(rd_cargo)
                    .addComponent(rd_passanger))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_toWhere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pilotName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_coPilotName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_year, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_distance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txt_model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32))
                        .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_flex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_flex1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_flex2)
                    .addComponent(txt_flex2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cargoID)
                    .addComponent(txt_cargoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Contains)
                    .addComponent(txt_contains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_sentDate)
                    .addComponent(txt_sentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_close)
                            .addComponent(btn_land)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_result, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rd_passangerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd_passangerActionPerformed
        lbl_result.setText("");
        lbl_flex1.setText("Company Name:");
        lbl_flex2.setText("Number Of Attendants:");
        lbl_Contains.setVisible(false);
        lbl_cargoID.setVisible(false);
        lbl_sentDate.setVisible(false);
        txt_cargoID.setVisible(false);
        txt_contains.setVisible(false);
        txt_sentDate.setVisible(false);
    }//GEN-LAST:event_rd_passangerActionPerformed

    private void rd_privateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd_privateActionPerformed
        // TODO add your handling code here:
        lbl_result.setText("");

        lbl_flex1.setText("Owner Name:");
        lbl_flex2.setText("Owner Surname:");
        lbl_Contains.setVisible(false);
        lbl_cargoID.setVisible(false);
        lbl_sentDate.setVisible(false);
        txt_cargoID.setVisible(false);
        txt_contains.setVisible(false);
        txt_sentDate.setVisible(false);
    }//GEN-LAST:event_rd_privateActionPerformed

    private void rd_cargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd_cargoActionPerformed
        // TODO add your handling code here:
        lbl_result.setText("");

        lbl_flex1.setText("Weight Capacity:");
        lbl_flex2.setText("Usage");
        lbl_Contains.setVisible(true);
        lbl_cargoID.setVisible(true);
        lbl_sentDate.setVisible(true);
        txt_cargoID.setVisible(true);
        txt_contains.setVisible(true);
        txt_sentDate.setVisible(true);
    }//GEN-LAST:event_rd_cargoActionPerformed

    private void btn_landActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_landActionPerformed
        // TODO add your handling code here:
        if (txt_model.getText().equals("") || txt_from.getText().equals("") || txt_toWhere.getText().equals("") || txt_pilotName.getText().equals("") || txt_coPilotName.getText().equals("") || txt_year.getText().equals("") || txt_distance.getText().equals("")) {
            lbl_result.setText("Fill all the areas please!");
        } else {
            String model = txt_model.getText();
            String from = txt_from.getText();
            String toWhere = txt_toWhere.getText();
            String pilotName = txt_pilotName.getText();
            String coPilotName = txt_coPilotName.getText();
            String year = txt_year.getText();
            String flightDistance = txt_distance.getText();
            if (rd_passanger.isSelected()) {
                String companyName = txt_flex.getText();
                String numOfAttend = txt_flex2.getText();
                ArrayList<Passenger> arr = null;
                AirportSys.landPassenger(numOfAttend, companyName, airportLF, model, from, toWhere, pilotName, coPilotName, "inpark", year, flightDistance, arr);

            } else if (rd_private.isSelected()) {
                String ownerName = txt_flex.getText();
                String ownerSurname = txt_flex2.getText();
                AirportSys.landPrivate(airportLF, ownerName, ownerSurname, model, from, toWhere, pilotName, coPilotName, "in park", year, flightDistance);

            } else {
                String WeightCapacity = txt_flex.getText();
                String usage = txt_flex2.getText();
                String cargoID = txt_cargoID.getText();
                String contains = txt_contains.getText();
                String sentDate = txt_sentDate.getText();
                Cargo c = new Cargo(cargoID, contains, sentDate);
                AirportSys.landCargo(airportLF, WeightCapacity, usage, c, model, from, toWhere, pilotName, coPilotName, "in-park", year, flightDistance);
            }
            txt_model.setText("");
            txt_from.setText("");
            txt_toWhere.setText("");
            txt_pilotName.setText("");
            txt_coPilotName.setText("");
            txt_flex.setText("");
            txt_flex2.setText("");
            txt_sentDate.setText("");
            txt_contains.setText("");
            txt_cargoID.setText("");
            txt_year.setText("");
            txt_distance.setText("");
            lbl_result.setText("The plane with the is landed the airport!");
        }

    }//GEN-LAST:event_btn_landActionPerformed

    private void btn_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_closeActionPerformed
        // TODO add your handling code here:

        as2.getCmbParked().setModel(new DefaultComboBoxModel<String>(AirportSys.getFlight_IDs(airportLF)));
        dispose();
    }//GEN-LAST:event_btn_closeActionPerformed

    private void txt_flex2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_flex2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_model.getText().equals("") || txt_from.getText().equals("") || txt_toWhere.getText().equals("") || txt_pilotName.getText().equals("") || txt_coPilotName.getText().equals("") || txt_year.getText().equals("") || txt_distance.getText().equals("")) {
                lbl_result.setText("Fill all the areas please!");
            } else {
                String model = txt_model.getText();
                String from = txt_from.getText();
                String toWhere = txt_toWhere.getText();
                String pilotName = txt_pilotName.getText();
                String coPilotName = txt_coPilotName.getText();
                String year = txt_year.getText();
                String flightDistance = txt_distance.getText();
                if (rd_passanger.isSelected()) {
                    String companyName = txt_flex.getText();
                    String numOfAttend = txt_flex2.getText();
                    ArrayList<Passenger> arr = null;
                    AirportSys.landPassenger(numOfAttend, companyName, airportLF, model, from, toWhere, pilotName, coPilotName, "inpark", year, flightDistance, arr);

                } else if (rd_private.isSelected()) {
                    String ownerName = txt_flex.getText();
                    String ownerSurname = txt_flex2.getText();
                    AirportSys.landPrivate(airportLF, ownerName, ownerSurname, model, from, toWhere, pilotName, coPilotName, "in park", year, flightDistance);

                } else {
                    String WeightCapacity = txt_flex.getText();
                    String usage = txt_flex2.getText();
                    String cargoID = txt_cargoID.getText();
                    String contains = txt_contains.getText();
                    String sentDate = txt_sentDate.getText();
                    Cargo c = new Cargo(cargoID, contains, sentDate);
                    AirportSys.landCargo(airportLF, WeightCapacity, usage, c, model, from, toWhere, pilotName, coPilotName, "in-park", year, flightDistance);
                }
                txt_model.setText("");
                txt_from.setText("");
                txt_toWhere.setText("");
                txt_pilotName.setText("");
                txt_coPilotName.setText("");
                txt_flex.setText("");
                txt_flex2.setText("");
                txt_sentDate.setText("");
                txt_contains.setText("");
                txt_cargoID.setText("");
                txt_year.setText("");
                txt_distance.setText("");
                lbl_result.setText("The plane with the is landed the airport!");
            }
        }

    }//GEN-LAST:event_txt_flex2KeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_close;
    private javax.swing.JButton btn_land;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbl_Contains;
    private javax.swing.JLabel lbl_cargoID;
    private javax.swing.JLabel lbl_flex1;
    private javax.swing.JLabel lbl_flex2;
    private javax.swing.JLabel lbl_result;
    private javax.swing.JLabel lbl_sentDate;
    private javax.swing.JLabel lbl_year;
    private javax.swing.JRadioButton rd_cargo;
    private javax.swing.JRadioButton rd_passanger;
    private javax.swing.JRadioButton rd_private;
    private javax.swing.JTextField txt_cargoID;
    private javax.swing.JTextField txt_coPilotName;
    private javax.swing.JTextField txt_contains;
    private javax.swing.JTextField txt_distance;
    private javax.swing.JTextField txt_flex;
    private javax.swing.JTextField txt_flex2;
    private javax.swing.JTextField txt_from;
    private javax.swing.JTextField txt_model;
    private javax.swing.JTextField txt_pilotName;
    private javax.swing.JTextField txt_sentDate;
    private javax.swing.JTextField txt_toWhere;
    private javax.swing.JTextField txt_year;
    // End of variables declaration//GEN-END:variables
}
